package com.cg.onlinesweetmart.aspect;

import org.aspectj.lang.JoinPoint;
import org.aspectj.lang.annotation.After;
import org.aspectj.lang.annotation.AfterThrowing;
import org.aspectj.lang.annotation.Aspect;
import org.aspectj.lang.annotation.Before;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.stereotype.Component;

@Component
@Aspect
public class LoggerAspect { //aspect

	private static final Logger LOGGER = LoggerFactory.getLogger(LoggerAspect.class);
	
	// return type, class name, method name, arguments
	
	@Before("execution(* com.cg.onlinesweetmart.service.impl.AuthServiceImpl.*(..))") //advice pointcut
	public void logMethodCall(JoinPoint joinPoint) {
		LOGGER.info("method called " + joinPoint.getSignature().getName());
	}
	
	@After("execution(* com.cg.onlinesweetmart.service.impl.AuthServiceImpl.*(..))") //advice pointcut
	public void logMethodExecuted(JoinPoint joinPoint) {
		LOGGER.info("method executed " + joinPoint.getSignature().getName());
	}
	
	@AfterThrowing("execution(* com.cg.onlinesweetmart.service.impl.AuthServiceImpl.*(..))") //advice pointcut
	public void logMethodCrash(JoinPoint joinPoint) {
		LOGGER.info("error thrown at " + joinPoint.getSignature().getName());
	}
	
}
