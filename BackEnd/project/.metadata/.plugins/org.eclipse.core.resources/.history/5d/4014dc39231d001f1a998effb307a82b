package com.cg.onlinesweetmart.service.impl;

import java.util.HashSet;
import java.util.List;
import java.util.Set;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.security.crypto.password.PasswordEncoder;
import org.springframework.stereotype.Service;

import com.cg.onlinesweetmart.entity.Cart;
import com.cg.onlinesweetmart.entity.Role;
import com.cg.onlinesweetmart.entity.User;
import com.cg.onlinesweetmart.exception.SweetMartAPIException;
import com.cg.onlinesweetmart.repository.CartRepository;
import com.cg.onlinesweetmart.repository.RoleRepository;
import com.cg.onlinesweetmart.repository.UserRepository;
import com.cg.onlinesweetmart.service.UserService;

/**
 * Implementation of the UserService interface for managing users.
 */
@Service
public class UserServiceImpl implements UserService {

    @Autowired
    private UserRepository userRepository;

    /**
     * Retrieves a list of all users.
     *
     * @return List of all users.
     */
    @Override
    public List<User> showAllUsers() {
        return userRepository.findAll();
    }

    /**
     * Updates an existing user.
     *
     * @param user The user to be updated.
     * @return The updated user.
     * @throws SweetMartAPIException If the user to be updated is not found.
     */
    @Override
    public User updateUser(User user) {
        if (userRepository.existsById(user.getUserId())) {
            return userRepository.save(user);
        } else {
            throw new SweetMartAPIException(HttpStatus.NOT_FOUND, "User not found with ID: " + user.getUserId());
        }
    }

    /**
     * Cancels a user by their ID.
     *
     * @param userId The ID of the user to be canceled.
     * @throws SweetMartAPIException If the user to be canceled is not found.
     */
    @Override
    public void cancelUser(long userId) {
        if (userRepository.existsById(userId)) {
            userRepository.deleteById(userId);
        } else {
            throw new SweetMartAPIException(HttpStatus.NOT_FOUND, "User not found with ID: " + userId);
        }
    }
}